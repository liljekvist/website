name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

defaults:
  run:
    working-directory: BackEnd/api

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: update sources
      run: sudo apt update
    
    - name: drogon
      run: cd third_party && git clone https://github.com/an-tao/drogon.git && cd drogon && git clone https://github.com/an-tao/trantor.git
      
    - name: Build env
      run: sudo apt install git && sudo apt install gcc && sudo apt install g++ && sudo apt install cmake
      
    - name: Json lib
      run: sudo apt install libjsoncpp-dev
      
    - name: uuid
      run: sudo apt install uuid-dev
      
    - name: ssl
      run: sudo apt install openssl && sudo apt install libssl-dev
      
    - name: zlib
      run: sudo apt install zlib1g-dev
      
    - name: mariadb dev
      run: sudo apt install libmariadbclient-dev

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
